set is_bold = false;
set is_italic = false;
set is_bold_italic = false;
set is_under = false;
set is_hook = false
set is_strike = false;
set leng = strings.length(input);
set current = 0;

while(current < leng){
    if (is_hook = false & strings.charAt(input, current) = '*') {
        if(strings.charAt(input, current + 1) = '*') {
            if(strings.charAt(input, current + 2) = '*') {
                if(is_bold_italic) {
                    > html.closeTag('b') + html.closeTag('i');

                    is_bold_italic = false;
                } else {
                    > html.createTag('b') + html.createTag('i');

                    is_bold_italic = true;
                }

                current++;
            } else {
                if(is_bold) {
                    > html.closeTag('b');

                    is_bold = false;
                } else {
                    > html.createTag('b');

                    is_bold = true;
                }
            }

            current++;
        } else {
            if(is_italic) {
                > html.closeTag('i');

                is_italic = false;
            } else {
                > html.createTag('i');

                is_italic = true;
            }
        }
    } else if(is_hook = false & strings.charAt(input, current) = '-'){
        if(is_strike) {
            > html.closeTag('strike');

            is_strike = false;
        } else {
            > html.createTag('strike');

            is_strike = true;
        }
    } else if(strings.charAt(input, current) = '`'){
        if(is_hook) {
            > html.closeTag('code');

            is_hook = false;
        } else {
            > html.createTag('code');

            is_hook = true;
        }
    } else if(is_hook = false & strings.charAt(input, current) = '_'){
        if(is_under) {
            > html.closeTag('u');

            is_under = false;
        } else {
            > html.createTag('u');

            is_under = true;
        }
    } else {
        > strings.charAt(input, current);
    }

    current++;
}